openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'http://localhost:8082'
    description: Generated server url
paths:
  /jobs:
    get:
      tags:
        - job-controller
      operationId: all
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelJob'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
        - job-controller
      operationId: newJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  '/jobs/{id}/start':
    post:
      tags:
        - job-controller
      operationId: start
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  '/jobs/results/{id}':
    get:
      tags:
        - job-controller
      operationId: resultOfOneJobIteration
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelJobResult'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
    patch:
      tags:
        - job-controller
      operationId: postResultOfJobIteration
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jobresult:
                  $ref: '#/components/schemas/JobResult'
                file:
                  type: string
                  format: binary
              required:
                - file
                - jobresult
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  '/jobs/iteration/{id}/status':
    patch:
      tags:
        - job-controller
      operationId: updateStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
              enum:
                - CREATED
                - WAITING
                - RUNNING
                - CANCELLED
                - FAILED
                - DONE
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  '/jobs/{id}':
    get:
      tags:
        - job-controller
      operationId: one
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelJob'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  '/jobs/{id}/results':
    get:
      tags:
        - job-controller
      operationId: resultsOfJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  '/jobs/{id}/results/graphdata':
    get:
      tags:
        - job-controller
      operationId: resultsOfJobForGraph
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  '/jobs/results/{id}/fds':
    get:
      tags:
        - job-controller
      operationId: resultsFds
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  '/jobs/{id}/delete':
    delete:
      tags:
        - job-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  '/jobs/{id}/cancel':
    delete:
      tags:
        - job-controller
      operationId: cancel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Job:
      type: object
      properties:
        id:
          type: integer
          format: int64
        jobName:
          type: string
          minLength: 1
        jobDescription:
          type: string
        status:
          type: string
          enum:
            - CREATED
            - WAITING
            - RUNNING
            - CANCELLED
            - FAILED
            - DONE
        algorithm:
          type: array
          items:
            type: string
          minItems: 1
        repeat:
          type: integer
          format: int32
          maximum: 20
        dataset:
          type: integer
          format: int64
        datasetName:
          type: string
          minLength: 1
        limitEntries:
          type: integer
          format: int32
        skipEntries:
          type: integer
          format: int32
        maxLHS:
          type: integer
          format: int32
        jobResults:
          type: array
          items:
            $ref: '#/components/schemas/JobResult'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        jobRunning:
          type: boolean
        jobPossibleToRun:
          type: boolean
        statusToIterationsAndJob:
          type: string
          enum:
            - CREATED
            - WAITING
            - RUNNING
            - CANCELLED
            - FAILED
            - DONE
          writeOnly: true
      required:
        - algorithm
        - dataset
        - datasetName
        - jobName
    JobResult:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - CREATED
            - WAITING
            - RUNNING
            - CANCELLED
            - FAILED
            - DONE
        iteration:
          type: integer
          format: int32
        algorithm:
          type: string
          minLength: 1
        startTime:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        duration:
          type: integer
          format: int64
        numFoundFd:
          type: integer
          format: int32
        snapshots:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
        jobRunning:
          type: boolean
        jobPossibleToRun:
          type: boolean
      required:
        - algorithm
    Snapshot:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
        usedMemory:
          type: integer
          format: int64
        cpuLoad:
          type: number
          format: double
        threadCount:
          type: integer
          format: int32
        usedMemoryMb:
          type: number
          format: double
        cpuPercent:
          type: number
          format: double
    CollectionModelEntityModelJob:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            jobList:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelJob'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelJob:
      type: object
      properties:
        id:
          type: integer
          format: int64
        jobName:
          type: string
          minLength: 1
        jobDescription:
          type: string
        status:
          type: string
          enum:
            - CREATED
            - WAITING
            - RUNNING
            - CANCELLED
            - FAILED
            - DONE
        algorithm:
          type: array
          items:
            type: string
          minItems: 1
        repeat:
          type: integer
          format: int32
          maximum: 20
        dataset:
          type: integer
          format: int64
        datasetName:
          type: string
          minLength: 1
        limitEntries:
          type: integer
          format: int32
        skipEntries:
          type: integer
          format: int32
        maxLHS:
          type: integer
          format: int32
        jobResults:
          type: array
          items:
            $ref: '#/components/schemas/JobResult'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        jobRunning:
          type: boolean
        jobPossibleToRun:
          type: boolean
        statusToIterationsAndJob:
          type: string
          enum:
            - CREATED
            - WAITING
            - RUNNING
            - CANCELLED
            - FAILED
            - DONE
          writeOnly: true
        _links:
          $ref: '#/components/schemas/Links'
      required:
        - algorithm
        - dataset
        - datasetName
        - jobName
    EntityModelJobResult:
      type: object
      properties:
        id:
          type: integer
          format: int64
        job:
          $ref: '#/components/schemas/Job'
        status:
          type: string
          enum:
            - CREATED
            - WAITING
            - RUNNING
            - CANCELLED
            - FAILED
            - DONE
        iteration:
          type: integer
          format: int32
        algorithm:
          type: string
          minLength: 1
        startTime:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        duration:
          type: integer
          format: int64
        numFoundFd:
          type: integer
          format: int32
        snapshots:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
        jobRunning:
          type: boolean
        jobPossibleToRun:
          type: boolean
        _links:
          $ref: '#/components/schemas/Links'
      required:
        - algorithm
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
